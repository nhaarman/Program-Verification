class LinkedList {
	Node first;
	Node last;

	LinkedList() {
	
	}

	void linkLast(Integer val) {
		Node l = last;
		Node newNode = new Node(l, val, null);
		last = newNode;
		if (l == null) {
			first = newNode;
		} else {
			l.next = newNode;
		}
	}

	Integer unlinkFirst(Node f) {
		// assert f == first && f != null;
		Integer element = f.item;
		Node next = f.next;
		f.item = null;
		f.next = null;
		first = next;
		if (next == null) {
			last = null;
		} else {
			next.prev = null;
		}
		return element;
	}
	   
	Integer peek() {
		Node f = first;
		if (f == null) {
			return null;
		} else {
			return f.item;
		}
	}

	Integer poll() {
		Node f = first;
		if (f == null) {
			return null;
		} else {
			return unlinkFirst(f);
		}
	}

	boolean offer(Integer val) {
		linkLast(val);
		return true;
	}
}

class Integer {
 	int val;

	Integer(int val) {
		this.val = val;
	}
}

class Node {
	Node next;
	Node prev;
	Integer item;

	Node(Node prev, Integer item, Node next)
	{
		this.item = item;
		this.next = next;
		this.prev = prev;
	}
}

